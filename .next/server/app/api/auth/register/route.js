"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},14322:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};t.r(a),t.d(a,{POST:()=>l});var s=t(49303),i=t(88716),o=t(60670),n=t(87070),u=t(83493),p=t(98691);async function l(e){try{let{name:r,email:t,password:a}=await e.json();if(!t||!a)return n.NextResponse.json({ok:!1,error:"Email & password required."},{status:400});let s=String(t).trim().toLowerCase();if(await u._.user.findUnique({where:{email:s}}))return n.NextResponse.json({ok:!1,error:"User already exists."},{status:409});let i=await p.ZP.hash(String(a),10);return await u._.user.create({data:{email:s,name:r?.trim()||null,passwordHash:i}}),n.NextResponse.json({ok:!0},{status:201})}catch(e){return console.error(e),n.NextResponse.json({ok:!1,error:"Server error"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Users\\Dirmina\\Desktop\\ranandeh-ready\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h}=d,g="/api/auth/register/route";function x(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},83493:(e,r,t)=>{t.d(r,{_:()=>s});let a=require("@prisma/client"),s=global.prisma??new a.PrismaClient({log:["error"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[948,972,691],()=>t(14322));module.exports=a})();